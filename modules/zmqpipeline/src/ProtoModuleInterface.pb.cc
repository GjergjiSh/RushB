// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtoModuleInterface.proto

#include "ProtoModuleInterface.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
constexpr ServoValues_Proto::ServoValues_Proto(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : top_servo_(0)
  , right_servo_(0)
  , left_servo_(0){}
struct ServoValues_ProtoDefaultTypeInternal {
  constexpr ServoValues_ProtoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ServoValues_ProtoDefaultTypeInternal() {}
  union {
    ServoValues_Proto _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ServoValues_ProtoDefaultTypeInternal _ServoValues_Proto_default_instance_;
constexpr UltraSonicValues_Proto::UltraSonicValues_Proto(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : distance_(0){}
struct UltraSonicValues_ProtoDefaultTypeInternal {
  constexpr UltraSonicValues_ProtoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UltraSonicValues_ProtoDefaultTypeInternal() {}
  union {
    UltraSonicValues_Proto _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UltraSonicValues_ProtoDefaultTypeInternal _UltraSonicValues_Proto_default_instance_;
constexpr SharedData_Proto::SharedData_Proto(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : servos_(nullptr)
  , uss_(nullptr){}
struct SharedData_ProtoDefaultTypeInternal {
  constexpr SharedData_ProtoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SharedData_ProtoDefaultTypeInternal() {}
  union {
    SharedData_Proto _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SharedData_ProtoDefaultTypeInternal _SharedData_Proto_default_instance_;
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_ProtoModuleInterface_2eproto[3];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_ProtoModuleInterface_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_ProtoModuleInterface_2eproto = nullptr;

const uint32_t TableStruct_ProtoModuleInterface_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ServoValues_Proto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ServoValues_Proto, top_servo_),
  PROTOBUF_FIELD_OFFSET(::ServoValues_Proto, right_servo_),
  PROTOBUF_FIELD_OFFSET(::ServoValues_Proto, left_servo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::UltraSonicValues_Proto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::UltraSonicValues_Proto, distance_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::SharedData_Proto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::SharedData_Proto, servos_),
  PROTOBUF_FIELD_OFFSET(::SharedData_Proto, uss_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::ServoValues_Proto)},
  { 9, -1, -1, sizeof(::UltraSonicValues_Proto)},
  { 16, -1, -1, sizeof(::SharedData_Proto)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ServoValues_Proto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_UltraSonicValues_Proto_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_SharedData_Proto_default_instance_),
};

const char descriptor_table_protodef_ProtoModuleInterface_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\032ProtoModuleInterface.proto\"O\n\021ServoVal"
  "ues_Proto\022\021\n\ttop_servo\030\001 \001(\005\022\023\n\013right_se"
  "rvo\030\002 \001(\005\022\022\n\nleft_servo\030\003 \001(\005\"*\n\026UltraSo"
  "nicValues_Proto\022\020\n\010distance\030\001 \001(\002\"\\\n\020Sha"
  "redData_Proto\022\"\n\006servos\030\001 \001(\0132\022.ServoVal"
  "ues_Proto\022$\n\003uss\030\002 \001(\0132\027.UltraSonicValue"
  "s_Protob\006proto3"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_ProtoModuleInterface_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ProtoModuleInterface_2eproto = {
  false, false, 255, descriptor_table_protodef_ProtoModuleInterface_2eproto, "ProtoModuleInterface.proto", 
  &descriptor_table_ProtoModuleInterface_2eproto_once, nullptr, 0, 3,
  schemas, file_default_instances, TableStruct_ProtoModuleInterface_2eproto::offsets,
  file_level_metadata_ProtoModuleInterface_2eproto, file_level_enum_descriptors_ProtoModuleInterface_2eproto, file_level_service_descriptors_ProtoModuleInterface_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_ProtoModuleInterface_2eproto_getter() {
  return &descriptor_table_ProtoModuleInterface_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_ProtoModuleInterface_2eproto(&descriptor_table_ProtoModuleInterface_2eproto);

// ===================================================================

class ServoValues_Proto::_Internal {
 public:
};

ServoValues_Proto::ServoValues_Proto(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:ServoValues_Proto)
}
ServoValues_Proto::ServoValues_Proto(const ServoValues_Proto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&top_servo_, &from.top_servo_,
    static_cast<size_t>(reinterpret_cast<char*>(&left_servo_) -
    reinterpret_cast<char*>(&top_servo_)) + sizeof(left_servo_));
  // @@protoc_insertion_point(copy_constructor:ServoValues_Proto)
}

inline void ServoValues_Proto::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&top_servo_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&left_servo_) -
    reinterpret_cast<char*>(&top_servo_)) + sizeof(left_servo_));
}

ServoValues_Proto::~ServoValues_Proto() {
  // @@protoc_insertion_point(destructor:ServoValues_Proto)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ServoValues_Proto::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ServoValues_Proto::ArenaDtor(void* object) {
  ServoValues_Proto* _this = reinterpret_cast< ServoValues_Proto* >(object);
  (void)_this;
}
void ServoValues_Proto::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ServoValues_Proto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ServoValues_Proto::Clear() {
// @@protoc_insertion_point(message_clear_start:ServoValues_Proto)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&top_servo_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&left_servo_) -
      reinterpret_cast<char*>(&top_servo_)) + sizeof(left_servo_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ServoValues_Proto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 top_servo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          top_servo_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 right_servo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          right_servo_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 left_servo = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          left_servo_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ServoValues_Proto::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ServoValues_Proto)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 top_servo = 1;
  if (this->_internal_top_servo() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_top_servo(), target);
  }

  // int32 right_servo = 2;
  if (this->_internal_right_servo() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_right_servo(), target);
  }

  // int32 left_servo = 3;
  if (this->_internal_left_servo() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_left_servo(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServoValues_Proto)
  return target;
}

size_t ServoValues_Proto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServoValues_Proto)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 top_servo = 1;
  if (this->_internal_top_servo() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_top_servo());
  }

  // int32 right_servo = 2;
  if (this->_internal_right_servo() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_right_servo());
  }

  // int32 left_servo = 3;
  if (this->_internal_left_servo() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_left_servo());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ServoValues_Proto::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ServoValues_Proto::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ServoValues_Proto::GetClassData() const { return &_class_data_; }

void ServoValues_Proto::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ServoValues_Proto *>(to)->MergeFrom(
      static_cast<const ServoValues_Proto &>(from));
}


void ServoValues_Proto::MergeFrom(const ServoValues_Proto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServoValues_Proto)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_top_servo() != 0) {
    _internal_set_top_servo(from._internal_top_servo());
  }
  if (from._internal_right_servo() != 0) {
    _internal_set_right_servo(from._internal_right_servo());
  }
  if (from._internal_left_servo() != 0) {
    _internal_set_left_servo(from._internal_left_servo());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ServoValues_Proto::CopyFrom(const ServoValues_Proto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServoValues_Proto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServoValues_Proto::IsInitialized() const {
  return true;
}

void ServoValues_Proto::InternalSwap(ServoValues_Proto* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ServoValues_Proto, left_servo_)
      + sizeof(ServoValues_Proto::left_servo_)
      - PROTOBUF_FIELD_OFFSET(ServoValues_Proto, top_servo_)>(
          reinterpret_cast<char*>(&top_servo_),
          reinterpret_cast<char*>(&other->top_servo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ServoValues_Proto::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_ProtoModuleInterface_2eproto_getter, &descriptor_table_ProtoModuleInterface_2eproto_once,
      file_level_metadata_ProtoModuleInterface_2eproto[0]);
}

// ===================================================================

class UltraSonicValues_Proto::_Internal {
 public:
};

UltraSonicValues_Proto::UltraSonicValues_Proto(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:UltraSonicValues_Proto)
}
UltraSonicValues_Proto::UltraSonicValues_Proto(const UltraSonicValues_Proto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  distance_ = from.distance_;
  // @@protoc_insertion_point(copy_constructor:UltraSonicValues_Proto)
}

inline void UltraSonicValues_Proto::SharedCtor() {
distance_ = 0;
}

UltraSonicValues_Proto::~UltraSonicValues_Proto() {
  // @@protoc_insertion_point(destructor:UltraSonicValues_Proto)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void UltraSonicValues_Proto::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void UltraSonicValues_Proto::ArenaDtor(void* object) {
  UltraSonicValues_Proto* _this = reinterpret_cast< UltraSonicValues_Proto* >(object);
  (void)_this;
}
void UltraSonicValues_Proto::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UltraSonicValues_Proto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UltraSonicValues_Proto::Clear() {
// @@protoc_insertion_point(message_clear_start:UltraSonicValues_Proto)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  distance_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UltraSonicValues_Proto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // float distance = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 13)) {
          distance_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UltraSonicValues_Proto::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UltraSonicValues_Proto)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // float distance = 1;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_distance = this->_internal_distance();
  uint32_t raw_distance;
  memcpy(&raw_distance, &tmp_distance, sizeof(tmp_distance));
  if (raw_distance != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(1, this->_internal_distance(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UltraSonicValues_Proto)
  return target;
}

size_t UltraSonicValues_Proto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UltraSonicValues_Proto)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float distance = 1;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_distance = this->_internal_distance();
  uint32_t raw_distance;
  memcpy(&raw_distance, &tmp_distance, sizeof(tmp_distance));
  if (raw_distance != 0) {
    total_size += 1 + 4;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UltraSonicValues_Proto::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UltraSonicValues_Proto::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UltraSonicValues_Proto::GetClassData() const { return &_class_data_; }

void UltraSonicValues_Proto::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UltraSonicValues_Proto *>(to)->MergeFrom(
      static_cast<const UltraSonicValues_Proto &>(from));
}


void UltraSonicValues_Proto::MergeFrom(const UltraSonicValues_Proto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UltraSonicValues_Proto)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_distance = from._internal_distance();
  uint32_t raw_distance;
  memcpy(&raw_distance, &tmp_distance, sizeof(tmp_distance));
  if (raw_distance != 0) {
    _internal_set_distance(from._internal_distance());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UltraSonicValues_Proto::CopyFrom(const UltraSonicValues_Proto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UltraSonicValues_Proto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UltraSonicValues_Proto::IsInitialized() const {
  return true;
}

void UltraSonicValues_Proto::InternalSwap(UltraSonicValues_Proto* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(distance_, other->distance_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UltraSonicValues_Proto::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_ProtoModuleInterface_2eproto_getter, &descriptor_table_ProtoModuleInterface_2eproto_once,
      file_level_metadata_ProtoModuleInterface_2eproto[1]);
}

// ===================================================================

class SharedData_Proto::_Internal {
 public:
  static const ::ServoValues_Proto& servos(const SharedData_Proto* msg);
  static const ::UltraSonicValues_Proto& uss(const SharedData_Proto* msg);
};

const ::ServoValues_Proto&
SharedData_Proto::_Internal::servos(const SharedData_Proto* msg) {
  return *msg->servos_;
}
const ::UltraSonicValues_Proto&
SharedData_Proto::_Internal::uss(const SharedData_Proto* msg) {
  return *msg->uss_;
}
SharedData_Proto::SharedData_Proto(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:SharedData_Proto)
}
SharedData_Proto::SharedData_Proto(const SharedData_Proto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_servos()) {
    servos_ = new ::ServoValues_Proto(*from.servos_);
  } else {
    servos_ = nullptr;
  }
  if (from._internal_has_uss()) {
    uss_ = new ::UltraSonicValues_Proto(*from.uss_);
  } else {
    uss_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:SharedData_Proto)
}

inline void SharedData_Proto::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&servos_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&uss_) -
    reinterpret_cast<char*>(&servos_)) + sizeof(uss_));
}

SharedData_Proto::~SharedData_Proto() {
  // @@protoc_insertion_point(destructor:SharedData_Proto)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void SharedData_Proto::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete servos_;
  if (this != internal_default_instance()) delete uss_;
}

void SharedData_Proto::ArenaDtor(void* object) {
  SharedData_Proto* _this = reinterpret_cast< SharedData_Proto* >(object);
  (void)_this;
}
void SharedData_Proto::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SharedData_Proto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SharedData_Proto::Clear() {
// @@protoc_insertion_point(message_clear_start:SharedData_Proto)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && servos_ != nullptr) {
    delete servos_;
  }
  servos_ = nullptr;
  if (GetArenaForAllocation() == nullptr && uss_ != nullptr) {
    delete uss_;
  }
  uss_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SharedData_Proto::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .ServoValues_Proto servos = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_servos(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .UltraSonicValues_Proto uss = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_uss(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SharedData_Proto::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SharedData_Proto)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .ServoValues_Proto servos = 1;
  if (this->_internal_has_servos()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::servos(this), target, stream);
  }

  // .UltraSonicValues_Proto uss = 2;
  if (this->_internal_has_uss()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::uss(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SharedData_Proto)
  return target;
}

size_t SharedData_Proto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SharedData_Proto)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ServoValues_Proto servos = 1;
  if (this->_internal_has_servos()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *servos_);
  }

  // .UltraSonicValues_Proto uss = 2;
  if (this->_internal_has_uss()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *uss_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SharedData_Proto::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SharedData_Proto::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SharedData_Proto::GetClassData() const { return &_class_data_; }

void SharedData_Proto::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SharedData_Proto *>(to)->MergeFrom(
      static_cast<const SharedData_Proto &>(from));
}


void SharedData_Proto::MergeFrom(const SharedData_Proto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SharedData_Proto)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_servos()) {
    _internal_mutable_servos()->::ServoValues_Proto::MergeFrom(from._internal_servos());
  }
  if (from._internal_has_uss()) {
    _internal_mutable_uss()->::UltraSonicValues_Proto::MergeFrom(from._internal_uss());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SharedData_Proto::CopyFrom(const SharedData_Proto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SharedData_Proto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SharedData_Proto::IsInitialized() const {
  return true;
}

void SharedData_Proto::InternalSwap(SharedData_Proto* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SharedData_Proto, uss_)
      + sizeof(SharedData_Proto::uss_)
      - PROTOBUF_FIELD_OFFSET(SharedData_Proto, servos_)>(
          reinterpret_cast<char*>(&servos_),
          reinterpret_cast<char*>(&other->servos_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SharedData_Proto::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_ProtoModuleInterface_2eproto_getter, &descriptor_table_ProtoModuleInterface_2eproto_once,
      file_level_metadata_ProtoModuleInterface_2eproto[2]);
}

// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::ServoValues_Proto* Arena::CreateMaybeMessage< ::ServoValues_Proto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ServoValues_Proto >(arena);
}
template<> PROTOBUF_NOINLINE ::UltraSonicValues_Proto* Arena::CreateMaybeMessage< ::UltraSonicValues_Proto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UltraSonicValues_Proto >(arena);
}
template<> PROTOBUF_NOINLINE ::SharedData_Proto* Arena::CreateMaybeMessage< ::SharedData_Proto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::SharedData_Proto >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
